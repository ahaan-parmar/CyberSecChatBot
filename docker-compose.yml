version: '3.8'

services:
  cybersec-chatbot:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: cybersec-chatbot
    ports:
      - "8501:8501"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - HUGGINGFACE_API_TOKEN=${HUGGINGFACE_API_TOKEN}
      - VECTOR_STORE_PATH=/app/vector_store
      - DATA_DIR=/app/data
      - LOG_FILE=/app/logs/chatbot.log
      - STREAMLIT_HOST=0.0.0.0
      - STREAMLIT_PORT=8501
    volumes:
      - ./data:/app/data:ro
      - ./vector_store:/app/vector_store
      - ./logs:/app/logs
      - ./exports:/app/exports
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Redis for caching (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   container_name: cybersec-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped

  # Optional: Vector database (uncomment if using external vector DB)
  # chroma:
  #   image: ghcr.io/chroma-core/chroma:latest
  #   container_name: cybersec-chroma
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - chroma_data:/chroma/chroma
  #   environment:
  #     - CHROMA_HOST=0.0.0.0
  #     - CHROMA_PORT=8000
  #   restart: unless-stopped

volumes:
  vector_store_data:
    driver: local
  logs_data:
    driver: local
  # redis_data:
  #   driver: local
  # chroma_data:
  #   driver: local

networks:
  default:
    name: cybersec-network